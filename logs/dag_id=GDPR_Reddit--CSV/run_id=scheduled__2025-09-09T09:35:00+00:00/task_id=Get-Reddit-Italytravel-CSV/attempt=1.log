{"timestamp":"2025-09-09T09:39:27.993569","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-09T09:39:27.994657","level":"info","event":"Filling up the DagBag from /home/tahmast/airflow/dags/new.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-09T09:39:28.069490","level":"error","event":"Exception rendering Jinja template for task 'Get-Reddit-Italytravel-CSV', field 'bash_command'. Template: '\\nset -Eeuo pipefail\\n\\nOUTDIR=\"/home/tahmast/airflow/data\"\\nmkdir -p \"$OUTDIR\"\\nOUT=\"$OUTDIR/$(date +%s).csv\"\\nURL=\\'https://www.reddit.com/r/italytravel/new.json?limit=10&raw_json=1\\'\\nUA=\\'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125 Safari/537.36\\'\\n\\n# SALT از env یا Airflow Variable\\nSALT=\"${GDPR_SALT:-{{ var.value.GDPR_SALT | default(\\'\\', true) }}}\"\\nif [ -z \"$SALT\" ]; then\\n  echo \"ERROR: GDPR_SALT is not set (env or Airflow Variable). Refusing to write non-pseudonymized data.\" >&2\\n  exit 1\\nfi\\n\\nTMP=$(mktemp)\\n\\n# 1) دریافت و چک وضعیت HTTP\\ncode=$(curl -sS --compressed -A \"$UA\" -w \\'%{http_code}\\' -o \"$TMP\" \"$URL\" || echo \"000\")\\nif [ \"$code\" != \"200\" ]; then\\n  echo \"ERROR: HTTP $code\" >&2\\n  # لاگِ خطا بدون افشای داده\\u200cهای حساس\\n  jq -re \\'.data.children[0:3][] | {id:\"[masked]\", author:\"[masked]\", title:(.data.title // \"\")}\\' \"$TMP\" 2>/dev/null || head -c 500 \"$TMP\" || true\\n  exit 1\\nfi\\n\\n# 2) JSON → CSV با هشِ GDPR برای author، id و permalink\\nexport OUT SALT TMP\\npython3 - << \\'PY\\'\\nimport os, json, csv, hashlib, re\\nfrom datetime import datetime, timezone\\n\\ndef sha256_hex(salt: str, value: str) -> str:\\n    return hashlib.sha256((salt + value).encode(\"utf-8\")).hexdigest()\\n\\nout = os.environ[\"OUT\"]\\ntmp = os.environ[\"TMP\"]\\nsalt = os.environ[\"SALT\"]\\n\\nwith open(tmp, \"r\", encoding=\"utf-8\") as f:\\n    payload = json.load(f)\\n\\nchildren = (payload.get(\"data\") or {}).get(\"children\") or []\\n\\nwith open(out, \"w\", newline=\"\", encoding=\"utf-8\") as f:\\n    w = csv.writer(f)\\n    # نام ستون\\u200cها دست\\u200cنخورده می\\u200cماند\\n    w.writerow([\"id\",\"author\",\"title\",\"score\",\"num_comments\",\"created_at\",\"permalink\"])\\n    for ch in children:\\n        d = (ch or {}).get(\"data\") or {}\\n        # --- id (هش) ---\\n        id_raw = str(d.get(\"id\",\"\")).strip().lower()\\n        id_hash = sha256_hex(salt, id_raw) if id_raw else \"\"\\n\\n        # --- author (هش) ---\\n        author_raw = str(d.get(\"author\") or \"\").strip().lower()\\n        author_hash = sha256_hex(salt, author_raw) if author_raw else \"\"\\n\\n        # --- title (تمیزسازی و کوتاه\\u200cسازی) ---\\n        title = (d.get(\"title\") or \"\")\\n        title = \" \".join(title.split())[:500]\\n\\n        # --- متادیتا ---\\n        score = d.get(\"score\", 0)\\n        num_comments = d.get(\"num_comments\", 0)\\n        created_utc = d.get(\"created_utc\", 0)\\n        try:\\n            created_at = datetime.fromtimestamp(created_utc, tz=timezone.utc).strftime(\"%Y-%m-%dT%H:%M:%SZ\")\\n        except Exception:\\n            created_at = \"\"\\n\\n        # --- permalink (هش) ---\\n        pl = \"https://www.reddit.com\" + (d.get(\"permalink\") or \"\")\\n        # نرمال\\u200cسازی ساده قبل از هش: حذف اسلش پایانیِ اضافه\\n        pl_norm = re.sub(r\"/+$\",\"\", pl.strip().lower())\\n        pl_hash = sha256_hex(salt, pl_norm) if pl_norm else \"\"\\n\\n        # خروجی: همان ستون\\u200cها، ولی مقادیر حساس هش شده\\u200cاند\\n        w.writerow([id_hash, author_hash, title, score, num_comments, created_at, pl_hash])\\nPY\\n\\n# 3) حداقل یک ردیف داده داشته باش\\nrows=$(wc -l < \"$OUT\")\\nif [ \"$rows\" -le 1 ]; then\\n  echo \"ERROR: no rows parsed\" >&2\\n  jq -re \\'.data.children | {count:length}\\' \"$TMP\" 2>/dev/null || true\\n  exit 1\\nfi\\n\\necho \"Wrote: $OUT\"\\nrm -f \"$TMP\"\\n'","logger":"airflow.sdk.definitions._internal.abstractoperator","error_detail":[{"exc_type":"AirflowRuntimeError","exc_value":"VARIABLE_NOT_FOUND: {'key': 'GDPR_SALT'}","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/definitions/_internal/abstractoperator.py","lineno":386,"name":"_do_render_template_fields"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/definitions/_internal/templater.py","lineno":177,"name":"render_template"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/definitions/_internal/abstractoperator.py","lineno":347,"name":"_render"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/definitions/_internal/templater.py","lineno":133,"name":"_render"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/utils/helpers.py","lineno":244,"name":"render_template_to_string"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/utils/helpers.py","lineno":239,"name":"render_template"},{"filename":"<template>","lineno":19,"name":"root"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/jinja2/sandbox.py","lineno":319,"name":"getattr"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/execution_time/context.py","lineno":318,"name":"__getattr__"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/execution_time/context.py","lineno":212,"name":"_get_variable"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-09-09T09:39:28.070036","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"AirflowRuntimeError","exc_value":"VARIABLE_NOT_FOUND: {'key': 'GDPR_SALT'}","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":914,"name":"run"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":804,"name":"_prepare"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":286,"name":"render_templates"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":1544,"name":"render_template_fields"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/definitions/_internal/abstractoperator.py","lineno":386,"name":"_do_render_template_fields"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/definitions/_internal/templater.py","lineno":177,"name":"render_template"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/definitions/_internal/abstractoperator.py","lineno":347,"name":"_render"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/definitions/_internal/templater.py","lineno":133,"name":"_render"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/utils/helpers.py","lineno":244,"name":"render_template_to_string"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/utils/helpers.py","lineno":239,"name":"render_template"},{"filename":"<template>","lineno":19,"name":"root"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/jinja2/sandbox.py","lineno":319,"name":"getattr"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/execution_time/context.py","lineno":318,"name":"__getattr__"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/execution_time/context.py","lineno":212,"name":"_get_variable"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-09-09T09:39:28.074818","level":"error","event":"Top level error","logger":"task","error_detail":[{"exc_type":"UndefinedError","exc_value":"'airflow.sdk.execution_time.task_runner.RuntimeTaskInstance object' has no attribute 'mark_success_url'","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1353,"name":"main"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1330,"name":"finalize"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1161,"name":"_send_task_error_email"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/models/taskinstance.py","lineno":411,"name":"_get_email_subject_content"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/models/taskinstance.py","lineno":408,"name":"render"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/utils/helpers.py","lineno":244,"name":"render_template_to_string"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/airflow/utils/helpers.py","lineno":239,"name":"render_template"},{"filename":"<template>","lineno":26,"name":"root"},{"filename":"/home/tahmast/myenv/lib/python3.12/site-packages/jinja2/runtime.py","lineno":859,"name":"_fail_with_undefined_error"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-09-09T09:39:28.082614Z","level":"warning","event":"Process exited abnormally","exit_code":1,"logger":"task"}
